name: configure, load secrets, run Cypress tests, generate and upload reports

on:
  workflow_call:
    secrets:
      service-account-token:
        required: true
    inputs:
      cypress_brb:
        type: string
      cypress_nbc:
        type: string
      cypress_dbc:
        type: string
      tag:
        type: string
      environment:
        type: string
      groups:
        type: string
      browser:
        type: string
        default: "chrome"

jobs:
  configure-load-secrets-and-run_tests:
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node-22.19.0-chrome-140.0.7339.127-1-ff-142.0.1-edge-140.0.3485.54-1
    env:
      OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.service-account-token }}

    steps:
      - name: Checkout tests
        uses: actions/checkout@v4
        with:
          repository: hpi-schul-cloud/e2e-system-tests
          path: e2e-system-tests

      - name: Install dependencies for 1Password CLI
        run: |
          apt-get update
          apt-get install -y curl unzip gnupg jq xauth

      - name: Install 1Password CLI
        run: |
           apt-get update
            apt-get install -y gnupg curl
            curl -sS https://downloads.1password.com/linux/keys/1password.asc \
              | gpg --dearmor --output /usr/share/keyrings/1password-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/1password-archive-keyring.gpg] https://downloads.1password.com/linux/debian/$(dpkg --print-architecture) stable main" \
              | tee /etc/apt/sources.list.d/1password.list
            mkdir -p /etc/debsig/policies/AC2D62742012EA22/
            curl -sS https://downloads.1password.com/linux/debian/debsig/1password.pol \
              | tee /etc/debsig/policies/AC2D62742012EA22/1password.pol
            mkdir -p /usr/share/debsig/keyrings/AC2D62742012EA22
            curl -sS https://downloads.1password.com/linux/keys/1password.asc \
              | gpg --dearmor --output /usr/share/debsig/keyrings/AC2D62742012EA22/debsig.gpg
            apt-get update
            apt-get install -y 1password-cli
            op --version

      # - name: Configure 1Password CLI
      #   run: |
      #     export OP_SERVICE_ACCOUNT_TOKEN="${{ secrets.service-account-token }}"
      #     # You may need to sign in or create a session depending on your workflow
      #     op --version

      # - name: Install 1Password CLI
      #   uses: 1password/install-cli-action@v2

      # - name: Configure 1Password Service Account
      #   uses: 1password/load-secrets-action/configure@v2
      #   with:
      #     service-account-token: ${{ secrets.service-account-token }}

      - name: Fetch JSON files from 1Password
        shell: bash
        run: |
          mkdir -p ${{ github.workspace }}/e2e-system-tests/env_variables
          instances=(brb dbc nbc)
          for instance in "${instances[@]}"; do
            vault_name="cy-${{ inputs.environment }}-${instance}"
            op document get cypress-json --vault "$vault_name" \
              --output ${{ github.workspace }}/e2e-system-tests/env_variables/file-${{ inputs.environment }}-${instance}.json
          done

      - name: Aggregate JSON Data into one File
        run: |
          chmod +x e2e-system-tests/scripts/aggregate-json-files.sh
          e2e-system-tests/scripts/aggregate-json-files.sh \
            "${{ github.workflow }}" \
            "${{ inputs.cypress_brb }}" \
            "${{ inputs.cypress_dbc }}" \
            "${{ inputs.cypress_nbc }}" \
            "${{ github.workspace }}" \
            "${{ inputs.environment }}"

      - name: Debug env_variables contents
        run: |
          echo "Listing env_variables dir:"
          ls -al ${{ github.workspace }}/e2e-system-tests/env_variables
          echo "Combined file content length:"
          wc -c ${{ github.workspace }}/e2e-system-tests/env_variables/combined_credentials.json || true

      - name: Install dependencies
        working-directory: e2e-system-tests
        run: npm ci

      - name: Clean up previous report
        working-directory: e2e-system-tests
        run: npm run pretest

      - name: Print workspace tree (excluding node_modules)
        run: |
          find ${{ github.workspace }} -type d -name node_modules -prune -o -print

      - name: Cypress run
        working-directory: e2e-system-tests
        env:
          CYPRESS_CONNECT_RETRY_THRESHOLD: "300"
          COMBINED_ENV_FILE: env_variables/combined_credentials.json
        run: |
          npm run cy:headless:stable:ci -- \
            --env tags=\"${{ inputs.tag }}\",parallelGroup=${{ inputs.groups }},environmentName=ci \
            --browser ${{ inputs.browser }}

      - name: Generate Report
        if: always()
        working-directory: e2e-system-tests
        run: npm run generate:report

      - name: Upload Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ inputs.groups }}-cypress-report
          path: e2e-system-tests/reports/

      - name: Upload Video Artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ inputs.groups }}-cypress-video-artifact
          path: e2e-system-tests/cypress/videos/${{ inputs.groups }}
          retention-days: 3

      - name: Cleanup secrets
        if: always()
        run: rm -rf e2e-system-tests/env_variables
