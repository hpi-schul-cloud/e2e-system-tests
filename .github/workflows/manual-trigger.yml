name: e2e-manual-trigger-tests
on:
  workflow_dispatch:
    inputs:
      test_mode:
        description: "Select testing mode"
        required: true
        type: choice
        options:
          - all regression tests
          - tests for pull requests (PR)
          - pre-check release tests
          - run selective tests (@only)
          - staging tests
        default: "tests for pull requests (PR)"
      browser:
        description: "Select browser"
        required: false
        type: choice
        options:
          - edge
          - chrome
          - electron
        default: edge
      instance1:
        description: "Please enter a valid BRB instance URL to run the tests on"
        default: "https://main.brb.dbildungscloud.dev"
        required: true
      instance2:
        description: "Please enter a valid NBC instance URL to run the tests on"
        default: "https://main.nbc.dbildungscloud.dev"
        required: true
      instance3:
        description: "Please enter a valid DBC instance URL to run the tests on"
        default: "https://main.dbc.dbildungscloud.dev"
        required: true

jobs:
  e2e-system-tests:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set_variables.outputs.environment }}
      tag_env: ${{ steps.set_variables.outputs.tag_env }}
      prio_tag: ${{ steps.set_variables.outputs.prio_tag }}
      base_tag: ${{ steps.set_variables.outputs.base_tag }}
    steps:
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set all parameters for next job
        id: set_variables
        shell: bash
        run: |
          if [[ "${{ inputs.instance1 }}" =~ (staging|schulportal) || \
                "${{ inputs.instance2 }}" =~ (staging|schulportal) || \
                "${{ inputs.instance3 }}" =~ (staging|schulportal) ]]; then
            env_type="ref"
            tag_env="@staging_test"
          else
            env_type="dev"
            tag_env="@school_api_test"
          fi

          echo "environment=$env_type" >> $GITHUB_OUTPUT
          echo "tag_env=$tag_env" >> $GITHUB_OUTPUT

          prio_tag=""
          if [[ "${{ inputs.test_mode }}" == "staging tests" ]]; then
            if [[ "$env_type" == "ref" ]]; then
              prio_tag="@prio_0-staging"
            else
              prio_tag="@prio_0-dev"
            fi
          fi

          echo "prio_tag=$prio_tag" >> $GITHUB_OUTPUT

          tag="@stable_test and $tag_env and $prio_tag"
          echo "base_tag=$tag" >> $GITHUB_OUTPUT

  run-all-tests:
    name: Run all regression tests
    needs: e2e-system-tests
    if: ${{ inputs.test_mode == 'all regression tests' }}
    uses: ./.github/workflows/main.yml
    secrets:
      service-account-token: ${{ secrets.CYPRESS_ONEPWD_SERVICE_ACCOUNT_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        group: [group-A, group-B, group-C, group-D, group-E, group-F]
    with:
      cypress_brb: ${{ inputs.instance1 }}
      cypress_dbc: ${{ inputs.instance3 }}
      cypress_nbc: ${{ inputs.instance2 }}
      browser: ${{ inputs.browser }}
      tag: '"@stable_test and ${{ needs.e2e-system-tests.outputs.tag_env }} and @${{ matrix.group }}"'
      environment: ${{ needs.e2e-system-tests.outputs.environment }}
      groups: ${{ matrix.group }}

  run-tests-selective:
    name: Run tests for pull requests (PR)
    needs: e2e-system-tests
    if: ${{ inputs.test_mode == 'tests for pull requests (PR)' }}
    uses: ./.github/workflows/main.yml
    secrets:
      service-account-token: ${{ secrets.CYPRESS_ONEPWD_SERVICE_ACCOUNT_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        group: [group-A, group-B, group-C, group-D, group-E, group-F]
    with:
      cypress_brb: ${{ inputs.instance1 }}
      cypress_dbc: ${{ inputs.instance3 }}
      cypress_nbc: ${{ inputs.instance2 }}
      browser: ${{ inputs.browser }}
      tag: '"@stable_test and ${{ needs.e2e-system-tests.outputs.tag_env }} and @${{ matrix.group }} and @pr"'
      environment: ${{ needs.e2e-system-tests.outputs.environment }}
      groups: ${{ matrix.group }}

  run-pre-check-tests:
    name: Run pre-check release tests
    needs: e2e-system-tests
    if: ${{ inputs.test_mode == 'pre-check release tests' }}
    uses: ./.github/workflows/main.yml
    secrets:
      service-account-token: ${{ secrets.CYPRESS_ONEPWD_SERVICE_ACCOUNT_TOKEN }}
    with:
      cypress_brb: ${{ inputs.instance1 }}
      cypress_dbc: ${{ inputs.instance3 }}
      cypress_nbc: ${{ inputs.instance2 }}
      browser: ${{ inputs.browser}}
      tag: '"@stable_test and ${{ needs.e2e-system-tests.outputs.tag_env }} and @pre_check_test"'
      environment: ${{ needs.e2e-system-tests.outputs.environment }}
      groups: pre-check

  run-only-tagged-tests:
    name: Run only tagged tests
    needs: e2e-system-tests
    if: ${{ inputs.test_mode == 'run selective tests (@only)' }}
    uses: ./.github/workflows/main.yml
    secrets:
      service-account-token: ${{ secrets.CYPRESS_ONEPWD_SERVICE_ACCOUNT_TOKEN }}
    with:
      cypress_brb: ${{ inputs.instance1 }}
      cypress_dbc: ${{ inputs.instance3 }}
      cypress_nbc: ${{ inputs.instance2 }}
      browser: ${{ inputs.browser }}
      tag: '"@only"'
      environment: ${{ needs.e2e-system-tests.outputs.environment }}
      groups: only-tagged

  # this one works but run both options
  # run-staging-tests:
  #   name: Run staging tests
  #   needs: e2e-system-tests
  #   if: ${{ inputs.test_mode == 'staging tests' }}
  #   uses: ./.github/workflows/main.yml
  #   secrets:
  #     service-account-token: ${{ secrets.CYPRESS_ONEPWD_SERVICE_ACCOUNT_TOKEN }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       environment_to_test: [ref, dev]
  #   with:
  #     cypress_brb: ${{ inputs.instance1 }}
  #     cypress_dbc: ${{ inputs.instance3 }}
  #     cypress_nbc: ${{ inputs.instance2 }}
  #     browser: ${{ inputs.browser }}
  #     tag: >-
  #       ${{ matrix.environment_to_test == 'ref' &&
  #           format('"{0} and @{1}"', needs.e2e-system-tests.outputs.base_tag, 'group-A') ||
  #           format('"{0}"', needs.e2e-system-tests.outputs.base_tag) }}
  #     environment: ${{ matrix.environment_to_test }}
  #     groups: >-
  #       ${{ matrix.environment_to_test == 'ref' && 'group-A' || 'staging-dev-tests' }}

  # not working
  # run-staging-tests:
  #   name: Run staging tests
  #   needs: e2e-system-tests
  #   if: ${{ inputs.test_mode == 'staging tests' }}
  #   uses: ./.github/workflows/main.yml
  #   secrets:
  #     service-account-token: ${{ secrets.CYPRESS_ONEPWD_SERVICE_ACCOUNT_TOKEN }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #         - environment_type: ref
  #           group: group-A
  #           tag_suffix: "@group-A"
  #         - environment_type: ref
  #           group: group-B
  #           tag_suffix: "@group-B"
  #         - environment_type: ref
  #           group: group-C
  #           tag_suffix: "@group-C"
  #         - environment_type: ref
  #           group: group-D
  #           tag_suffix: "@group-D"
  #         - environment_type: ref
  #           group: group-E
  #           tag_suffix: "@group-E"
  #         - environment_type: ref
  #           group: group-F
  #           tag_suffix: "@group-F"
  #         - environment_type: dev
  #           group: staging-dev-tests
  #           tag_suffix: ""
  #       exclude:
  #         - environment_type: ref
  #           if: ${{ needs.e2e-system-tests.outputs.environment != 'ref' }}
  #         - environment_type: dev
  #           if: ${{ needs.e2e-system-tests.outputs.environment != 'dev' }}
  #   with:
  #     cypress_brb: ${{ inputs.instance1 }}
  #     cypress_dbc: ${{ inputs.instance3 }}
  #     cypress_nbc: ${{ inputs.instance2 }}
  #     browser: ${{ inputs.browser }}
  #     tag: '"${{ needs.e2e-system-tests.outputs.base_tag }} ${{ matrix.tag_suffix }}"'
  #     environment: ${{ needs.e2e-system-tests.outputs.environment }}
  #     groups: ${{ matrix.group }}

  run-staging-tests:
    name: Run staging tests (ref tests)
    needs: e2e-system-tests
    if: ${{ inputs.test_mode == 'staging tests' && contains(needs.e2e-system-tests.outputs.environment, 'ref') }}
    uses: ./.github/workflows/main.yml
    secrets:
      service-account-token: ${{ secrets.CYPRESS_ONEPWD_SERVICE_ACCOUNT_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        groups: [group-A, group-B, group-C, group-D, group-D, group-E, group-F]
    with:
      cypress_brb: ${{ inputs.instance1 }}
      cypress_dbc: ${{ inputs.instance3 }}
      cypress_nbc: ${{ inputs.instance2 }}
      browser: ${{ inputs.browser }}
      tag: >-
        ${{ format('"{0} and @{1}"', needs.e2e-system-tests.outputs.base_tag, 'group-A') }}
      environment: ${{ needs.e2e-system-tests.outputs.environment }}
      groups: >-
        ${{ matrix.groups }}

  run-staging-dev-tests:
    name: Run staging tests (dev tests)
    needs: e2e-system-tests
    if: ${{ inputs.test_mode == 'staging tests' && contains(needs.e2e-system-tests.outputs.environment, 'dev') }}
    uses: ./.github/workflows/main.yml
    secrets:
      service-account-token: ${{ secrets.CYPRESS_ONEPWD_SERVICE_ACCOUNT_TOKEN }}
    with:
      cypress_brb: ${{ inputs.instance1 }}
      cypress_dbc: ${{ inputs.instance3 }}
      cypress_nbc: ${{ inputs.instance2 }}
      browser: ${{ inputs.browser }}
      tag: >-
        ${{ format('"{0}"', needs.e2e-system-tests.outputs.base_tag) }}
      environment: ${{ needs.e2e-system-tests.outputs.environment }}
      groups: 'staging-dev-tests'
