name: e2e-manual-trigger-tests
on:
  workflow_dispatch:
    inputs:
      test_mode:
        description: "Select testing mode"
        required: true
        type: choice
        options:
          - all regression tests
          - tests for pull requests (PR)
          - pre-check release tests
          - run selective tests (@only)
          - staging tests
        default: "tests for pull requests (PR)"
      browser:
        description: "Select browser"
        required: false
        type: choice
        options:
          - chrome
          - chrome
          - electron
          - firefox
        default: chrome
      branch_name:
        description: "Branch name (only needed for dev tests)"
        required: false
        default: "main"
      # brb_instance:
      #   description: "Please enter a valid BRB instance URL to run the tests on"
      #   default: "https://main.brb.dbildungscloud.dev"
      #   required: true

      # dbc_instance:
      #   description: "Please enter a valid DBC instance URL to run the tests on"
      #   default: "https://main.dbc.dbildungscloud.dev"
      #   required: true
      # nbc_instance:
      #   description: "Please enter a valid NBC instance URL to run the tests on"
      #   default: "https://main.nbc.dbildungscloud.dev"
      #   required: true

jobs:
  e2e-system-tests:
    runs-on: ubuntu-latest
    outputs:
      cypress_brb_staging: ${{ steps.set_variables.outputs.cypress_brb_staging }}
      cypress_dbc_staging: ${{ steps.set_variables.outputs.cypress_dbc_staging }}
      cypress_nbc_staging: ${{ steps.set_variables.outputs.cypress_nbc_staging }}
      cypress_brb_dev: ${{ steps.set_variables.outputs.cypress_brb_dev }}
      cypress_dbc_dev: ${{ steps.set_variables.outputs.cypress_dbc_dev }}
      cypress_nbc_dev: ${{ steps.set_variables.outputs.cypress_nbc_dev }}
      dev_groups: ${{ steps.set_variables.outputs.dev_groups }}
      staging_groups: ${{ steps.set_variables.outputs.staging_groups }}
      staging_dev_groups: ${{ steps.set_variables.outputs.staging_dev_groups }}
      all_tests_tag: ${{ steps.set_variables.outputs.all_tests_tag }}
      pr_tests_tag: ${{ steps.set_variables.outputs.pr_tests_tag }}
      pre_check_tag: ${{ steps.set_variables.outputs.pre_check_tag }}
      only_tagged_tag: ${{ steps.set_variables.outputs.only_tagged_tag }}
      staging_base_tag: ${{ steps.set_variables.outputs.staging_base_tag }}
      dev_base_tag: ${{ steps.set_variables.outputs.dev_base_tag }}
      environment: ${{ steps.set_variables.outputs.environment }}

      # comment for checking the behavior
      # environment: ${{ steps.set_variables.outputs.environment }}
      # matrix_groups: ${{ steps.set_variables.outputs.matrix_groups }}
      # all_tests_tag: ${{ steps.set_variables.outputs.all_tests_tag }}
      # pr_tests_tag: ${{ steps.set_variables.outputs.pr_tests_tag }}
      # pre_check_tag: ${{ steps.set_variables.outputs.pre_check_tag }}
      # only_tagged_tag: ${{ steps.set_variables.outputs.only_tagged_tag }}
      # staging_base_tag: ${{ steps.set_variables.outputs.staging_base_tag }}
    steps:
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set all parameters for next job
        id: set_variables
        shell: bash
        run: |
          # sanitize branch (keep only last path segment, lowercase, replace _ and . with -)
          branch="$(echo '${{ inputs.branch_name }}' | sed 's@.*/@@' | tr '[:upper:]' '[:lower:]' | tr _ - | tr . -)"

          # DEV URLs (branch-based)
          brb_dev="https://${branch}.brb.dbildungscloud.dev/"
          dbc_dev="https://${branch}.dbc.dbildungscloud.dev/"
          nbc_dev="https://${branch}.nbc.dbildungscloud.dev/"

          # STAGING URLs (fixed)
          brb_staging="https://staging.brandenburg.dbildungscloud.org/"
          dbc_staging="https://staging.dbildungscloud.org/"
          nbc_staging="https://staging.niedersachsen.dbildungscloud.org/"

          # Export URLs
          echo "cypress_brb_dev=$brb_dev" >> $GITHUB_OUTPUT
          echo "cypress_dbc_dev=$dbc_dev" >> $GITHUB_OUTPUT
          echo "cypress_nbc_dev=$nbc_dev" >> $GITHUB_OUTPUT

          echo "cypress_brb_staging=$brb_staging" >> $GITHUB_OUTPUT
          echo "cypress_dbc_staging=$dbc_staging" >> $GITHUB_OUTPUT
          echo "cypress_nbc_staging=$nbc_staging" >> $GITHUB_OUTPUT

          # Matrix groups
          echo 'dev_groups=["group-A","group-B","group-C","group-D","group-E","group-F"]' >> $GITHUB_OUTPUT
          echo 'staging_groups=["group-A","group-B","group-C","group-D","group-E","group-F"]' >> $GITHUB_OUTPUT
          echo 'staging_dev_groups=["staging-dev-tests"]' >> $GITHUB_OUTPUT

          # Default Tags
          echo "all_tests_tag=@stable_test and @school_api_test" >> $GITHUB_OUTPUT
          echo "pr_tests_tag=@stable_test and @school_api_test and @pr" >> $GITHUB_OUTPUT
          echo "pre_check_tag=@stable_test and @school_api_test and @pre_check_test" >> $GITHUB_OUTPUT
          echo "only_tagged_tag=@only" >> $GITHUB_OUTPUT
          # echo "staging_base_tag=@stable_test and @staging_test" >> $GITHUB_OUTPUT
          # echo "dev_base_tag=@stable_test and @school_api_test" >> $GITHUB_OUTPUT

          # Base tags with prio
          if [[ "${{ inputs.test_mode }}" == "staging tests" ]]; then
            echo "staging_base_tag=@stable_test and @staging_test and @prio_0_staging" >> $GITHUB_OUTPUT
            echo "dev_base_tag=@stable_test and @school_api_test and @prio_0_dev" >> $GITHUB_OUTPUT
            echo "environment=ref" >> $GITHUB_OUTPUT
          else
            echo "dev_base_tag=@stable_test and @school_api_test" >> $GITHUB_OUTPUT
            echo "environment=dev" >> $GITHUB_OUTPUT
          fi

          # comment for checking the behavior
          # if [[ "${{ inputs.test_mode }}" == "staging tests" ]]; then
          #   # staging URLs
          #   brb_staging="https://staging.brandenburg.dbildungscloud.org/"
          #   dbc_staging="https://staging.dbildungscloud.org/"
          #   nbc_staging="https://staging.niedersachsen.dbildungscloud.org/"

          #   # dev URLs (from branch input)
          #   branch="$(echo '${{ inputs.branch_name }}' | sed 's@.*/@@' | tr '[:upper:]' '[:lower:]' | tr _ - | tr . -)"
          #   brb_dev="https://${branch}.brb.dbildungscloud.dev/"
          #   dbc_dev="https://${branch}.dbc.dbildungscloud.dev/"
          #   nbc_dev="https://${branch}.nbc.dbildungscloud.dev/"

          #   echo "cypress_brb_staging=$brb_staging" >> $GITHUB_OUTPUT
          #   echo "cypress_dbc_staging=$dbc_staging" >> $GITHUB_OUTPUT
          #   echo "cypress_nbc_staging=$nbc_staging" >> $GITHUB_OUTPUT

          #   echo "cypress_brb_dev=$brb_dev" >> $GITHUB_OUTPUT
          #   echo "cypress_dbc_dev=$dbc_dev" >> $GITHUB_OUTPUT
          #   echo "cypress_nbc_dev=$nbc_dev" >> $GITHUB_OUTPUT

          #   echo 'staging_groups=["group-A","group-B","group-C","group-D","group-E","group-F"]' >> $GITHUB_OUTPUT
          #   echo 'dev_groups=["staging-dev-tests"]' >> $GITHUB_OUTPUT

          #   echo "environment=ref" >> $GITHUB_OUTPUT
          #   echo "staging_base_tag=@stable_test and @staging_test" >> $GITHUB_OUTPUT
          # else
          #   # regular dev mode
          #   branch="$(echo '${{ inputs.branch_name }}' | sed 's@.*/@@' | tr '[:upper:]' '[:lower:]' | tr _ - | tr . -)"
          #   brb_dev="https://${branch}.brb.dbildungscloud.dev/"
          #   dbc_dev="https://${branch}.dbc.dbildungscloud.dev/"
          #   nbc_dev="https://${branch}.nbc.dbildungscloud.dev/"

          #   echo "cypress_brb_dev=$brb_dev" >> $GITHUB_OUTPUT
          #   echo "cypress_dbc_dev=$dbc_dev" >> $GITHUB_OUTPUT
          #   echo "cypress_nbc_dev=$nbc_dev" >> $GITHUB_OUTPUT

          #   echo 'dev_groups=["group-A","group-B","group-C","group-D","group-E","group-F"]' >> $GITHUB_OUTPUT

          #   echo "environment=dev" >> $GITHUB_OUTPUT
          #   echo "dev_base_tag=@stable_test and @school_api_test" >> $GITHUB_OUTPUT
          # fi

          # if [[ "${{ inputs.brb_instance }}" =~ (staging|schulportal) || \
          #       "${{ inputs.nbc_instance }}" =~ (staging|schulportal) || \
          #       "${{ inputs.dbc_instance }}" =~ (staging|schulportal) ]]; then
          #   env_type="ref"
          #   tag_env="@staging_test"
          #   matrix_groups='["group-A","group-B","group-C","group-D","group-E","group-F"]'
          # else
          #   env_type="dev"
          #   tag_env="@school_api_test"
          #   matrix_groups='["staging-dev-tests"]'
          # fi

          # prio_tag=""
          # if [[ "${{ inputs.test_mode }}" == "staging tests" ]]; then
          #   if [[ "$env_type" == "ref" ]]; then
          #     prio_tag="@prio_0_staging"
          #   else
          #     prio_tag="@prio_0_dev"
          #   fi
          # fi

          # echo "environment=$env_type" >> $GITHUB_OUTPUT
          # echo "matrix_groups=$matrix_groups" >> $GITHUB_OUTPUT
          # echo "all_tests_tag=@stable_test and $tag_env" >> $GITHUB_OUTPUT
          # echo "pr_tests_tag=@stable_test and $tag_env and @pr" >> $GITHUB_OUTPUT
          # echo "pre_check_tag=@stable_test and $tag_env and @pre_check_test" >> $GITHUB_OUTPUT
          # echo "only_tagged_tag=@only" >> $GITHUB_OUTPUT
          # echo "staging_base_tag=@stable_test and $tag_env and $prio_tag" >> $GITHUB_OUTPUT



  # ---------------- dev-mode jobs (use dev_groups) ----------------------------------------------

  run-all-tests:
    name: Run all regression tests
    needs: e2e-system-tests
    if: ${{ inputs.test_mode == 'all regression tests' }}
    uses: ./.github/workflows/main.yml
    secrets:
      service-account-token: ${{ secrets.CYPRESS_ONEPWD_SERVICE_ACCOUNT_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        group: ${{ fromJson(needs.e2e-system-tests.outputs.dev_groups) }}
        # group: [group-A, group-B, group-C, group-D, group-E, group-F]
    with:
      cypress_brb: ${{ needs.e2e-system-tests.outputs.cypress_brb_dev }}
      cypress_dbc: ${{ needs.e2e-system-tests.outputs.cypress_dbc_dev }}
      cypress_nbc: ${{ needs.e2e-system-tests.outputs.cypress_nbc_dev }}
      browser: ${{ inputs.browser }}
      tag: ${{ format('"{0} and @{1}"', needs.e2e-system-tests.outputs.dev_base_tag, matrix.group) }}
      environment: ${{ needs.e2e-system-tests.outputs.environment }}
      groups: ${{ matrix.group }}
      # cypress_brb: ${{ inputs.brb_instance }}
      # cypress_dbc: ${{ inputs.dbc_instance }}
      # cypress_nbc: ${{ inputs.nbc_instance }}
      # browser: ${{ inputs.browser }}
      # tag: '"${{ needs.e2e-system-tests.outputs.all_tests_tag }} and @${{ matrix.group }}"'
      # environment: ${{ needs.e2e-system-tests.outputs.environment }}
      # groups: ${{ matrix.group }}

  run-tests-selective:
    name: Run tests for pull requests (PR)
    needs: e2e-system-tests
    if: ${{ inputs.test_mode == 'tests for pull requests (PR)' }}
    uses: ./.github/workflows/main.yml
    secrets:
      service-account-token: ${{ secrets.CYPRESS_ONEPWD_SERVICE_ACCOUNT_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        group: ${{ fromJson(needs.e2e-system-tests.outputs.dev_groups) }}
        # group: [group-A, group-B, group-C, group-D, group-E, group-F]
    with:
      cypress_brb: ${{ needs.e2e-system-tests.outputs.cypress_brb_dev }}
      cypress_dbc: ${{ needs.e2e-system-tests.outputs.cypress_dbc_dev }}
      cypress_nbc: ${{ needs.e2e-system-tests.outputs.cypress_nbc_dev }}
      browser: ${{ inputs.browser }}
      tag: ${{ format('"{0} and @{1}"', needs.e2e-system-tests.outputs.pr_tests_tag, matrix.group) }}
      environment: ${{ needs.e2e-system-tests.outputs.environment }}
      groups: ${{ matrix.group }}
      # cypress_brb: ${{ inputs.brb_instance }}
      # cypress_dbc: ${{ inputs.dbc_instance }}
      # cypress_nbc: ${{ inputs.nbc_instance }}
      # browser: ${{ inputs.browser }}
      # tag: '"${{ needs.e2e-system-tests.outputs.pr_tests_tag }} and @${{ matrix.group }}"'
      # environment: ${{ needs.e2e-system-tests.outputs.environment }}
      # groups: ${{ matrix.group }}

  run-pre-check-tests:
    name: Run pre-check release tests
    needs: e2e-system-tests
    if: ${{ inputs.test_mode == 'pre-check release tests' }}
    uses: ./.github/workflows/main.yml
    secrets:
      service-account-token: ${{ secrets.CYPRESS_ONEPWD_SERVICE_ACCOUNT_TOKEN }}
    with:
      cypress_brb: ${{ needs.e2e-system-tests.outputs.cypress_brb_dev }}
      cypress_dbc: ${{ needs.e2e-system-tests.outputs.cypress_dbc_dev }}
      cypress_nbc: ${{ needs.e2e-system-tests.outputs.cypress_nbc_dev }}
      browser: ${{ inputs.browser}}
      tag: '"${{ needs.e2e-system-tests.outputs.pre_check_tag }}"'
      environment: ${{ needs.e2e-system-tests.outputs.environment }}
      groups: pre-check
      # cypress_brb: ${{ inputs.brb_instance }}
      # cypress_dbc: ${{ inputs.dbc_instance }}
      # cypress_nbc: ${{ inputs.nbc_instance }}
      # browser: ${{ inputs.browser}}
      # tag: '"${{ needs.e2e-system-tests.outputs.pre_check_tag }}"'
      # environment: ${{ needs.e2e-system-tests.outputs.environment }}
      # groups: pre-check

  run-only-tagged-tests:
    name: Run only tagged tests
    needs: e2e-system-tests
    if: ${{ inputs.test_mode == 'run selective tests (@only)' }}
    uses: ./.github/workflows/main.yml
    secrets:
      service-account-token: ${{ secrets.CYPRESS_ONEPWD_SERVICE_ACCOUNT_TOKEN }}
    with:
      cypress_brb: ${{ needs.e2e-system-tests.outputs.cypress_brb_dev }}
      cypress_dbc: ${{ needs.e2e-system-tests.outputs.cypress_dbc_dev }}
      cypress_nbc: ${{ needs.e2e-system-tests.outputs.cypress_nbc_dev }}
      browser: ${{ inputs.browser }}
      tag: '"${{ needs.e2e-system-tests.outputs.only_tagged_tag }}"'
      environment: ${{ needs.e2e-system-tests.outputs.environment }}
      groups: only-tagged
      # cypress_brb: ${{ inputs.brb_instance }}
      # cypress_dbc: ${{ inputs.dbc_instance }}
      # cypress_nbc: ${{ inputs.nbc_instance }}
      # browser: ${{ inputs.browser }}
      # tag: '"${{ needs.e2e-system-tests.outputs.only_tagged_tag }}"'
      # environment: ${{ needs.e2e-system-tests.outputs.environment }}
      # groups: only-tagged


  # ---------------- staging-mode jobs (run when test_mode == 'staging tests') -------------------
  run-staging-tests:
    name: Run staging tests (staging URLs, groups A-F)
    needs: e2e-system-tests
    if: ${{ inputs.test_mode == 'staging tests' }}
    uses: ./.github/workflows/main.yml
    secrets:
      service-account-token: ${{ secrets.CYPRESS_ONEPWD_SERVICE_ACCOUNT_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        group: ${{ fromJson(needs.e2e-system-tests.outputs.staging_groups) }}
        # group: ["group-A","group-B","group-C","group-D","group-E","group-F"]
    with:
      cypress_brb: ${{ needs.e2e-system-tests.outputs.cypress_brb_staging }}
      cypress_dbc: ${{ needs.e2e-system-tests.outputs.cypress_dbc_staging }}
      cypress_nbc: ${{ needs.e2e-system-tests.outputs.cypress_nbc_staging }}
      browser: ${{ inputs.browser }}
      tag: ${{ format('"{0} and @{1}"', needs.e2e-system-tests.outputs.staging_base_tag, matrix.group) }}
      environment: ${{ needs.e2e-system-tests.outputs.environment }}
      groups: ${{ matrix.group }}

  run-dev-tests:
    name: Run dev tests (staging-dev-tests against branch)
    needs: e2e-system-tests
    if: ${{ inputs.test_mode == 'staging tests' }}
    uses: ./.github/workflows/main.yml
    secrets:
      service-account-token: ${{ secrets.CYPRESS_ONEPWD_SERVICE_ACCOUNT_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        group: ${{ fromJson(needs.e2e-system-tests.outputs.staging_dev_groups) }}
    with:
      cypress_brb: ${{ needs.e2e-system-tests.outputs.cypress_brb_dev }}
      cypress_dbc: ${{ needs.e2e-system-tests.outputs.cypress_dbc_dev }}
      cypress_nbc: ${{ needs.e2e-system-tests.outputs.cypress_nbc_dev }}
      browser: ${{ inputs.browser }}
      tag: ${{ needs.e2e-system-tests.outputs.dev_base_tag }}
      environment: dev
      groups: ${{ matrix.group }}


  # run-staging-tests:
  #   name: Run staging tests
  #   needs: e2e-system-tests
  #   if: ${{ inputs.test_mode == 'staging tests' }}
  #   uses: ./.github/workflows/main.yml
  #   secrets:
  #     service-account-token: ${{ secrets.CYPRESS_ONEPWD_SERVICE_ACCOUNT_TOKEN }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       group: ${{ fromJson(needs.e2e-system-tests.outputs.matrix_groups) }}
  #   with:
  #     cypress_brb: ${{ inputs.brb_instance }}
  #     cypress_dbc: ${{ inputs.dbc_instance }}
  #     cypress_nbc: ${{ inputs.nbc_instance }}
  #     browser: ${{ inputs.browser }}
  #     tag: >-
  #       ${{ matrix.group == 'staging-dev-tests'
  #       && format('"{0}"', needs.e2e-system-tests.outputs.staging_base_tag)
  #       || format('"{0} and @{1}"', needs.e2e-system-tests.outputs.staging_base_tag, matrix.group) }}
  #     environment: ${{ needs.e2e-system-tests.outputs.environment }}
  #     groups: ${{ matrix.group }}
